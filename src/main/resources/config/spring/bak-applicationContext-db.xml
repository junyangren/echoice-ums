<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
    <!--bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean-->

    <!-- 用p6spy 在console显示变量绑定后的真实sql 与ResultSet,方便开发 -->
    <!-- <bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource">
	         <constructor-arg>
		         <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			         <property name="driverClassName" value="${jdbc.driverClassName}"/>
			         <property name="url" value="${jdbc.url}"/>
			         <property name="username" value="${jdbc.username}"/>
			         <property name="password" value="${jdbc.password}"/>
		         </bean>
	         </constructor-arg>
         </bean>
    -->

    <!-- 通过JNDI 使用应用服务器 的Connection Pool-->
    
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
         <property name="jndiName" value="${jdbc.jndiName}"/>
    </bean>
    <!--bean id="dialect" class="org.hibernate.dialect.Oracle9Dialect"></bean-->
    <bean id="dialect" class="org.echoice.modules.spring.JdbcDialetFactoryBean">
    	<property name="hibernateDialect" value="${hibernate.dialect}"></property>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
    	<constructor-arg>
    		<ref bean="dataSource"/>
    	</constructor-arg>
    </bean>    
	<bean id="nativeJdbcExtractor" lazy-init="true" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor"/>
	<bean id="lobHandler" lazy-init="true" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
	</bean>

	
    <!--Hibernate SessionFatory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="schemaUpdate" value="${hibernate.schemaUpdate}"></property> 
        <property name="lobHandler" ref="lobHandler"/>
        <property name="annotatedClasses">
         	<list>
         		<value>org.echoice.ums.domain.EcAccssMode</value>
         		<value>org.echoice.ums.domain.EcGroup</value>
         		<value>org.echoice.ums.domain.EcObjects</value>
         		<value>org.echoice.ums.domain.EcOperator</value>
         		<value>org.echoice.ums.domain.EcPermission</value>
         		<value>org.echoice.ums.domain.EcResource</value>
         		<value>org.echoice.ums.domain.EcRole</value>
         		<value>org.echoice.ums.domain.EcUser</value>
         		<value>org.echoice.ums.domain.EcUserExtend</value>
         		<value>org.echoice.ums.domain.EcUserGroup</value>
         		<value>org.echoice.ums.domain.EcUsersAssignmen</value>
         		<value>org.echoice.ums.domain.EcGroupAssignment</value>
         	</list>
        </property>
        <property name="mappingLocations">
        	<list>
        		<value>classpath*:/org/echoice/ums/domain/hbm/*.hbm.xml</value>
        	</list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
            </props>
        </property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
				</entry>
			</map>
		</property>
    </bean>

    <!--Hibernate TransactionManager-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>
